#include <iostream>
using namespace std;

#define SIZE 100  // Maximum size of stack

class Stack {
private:
    int arr[SIZE];
    int top;

public:
    Stack() {
        top = -1;
    }

    // Push operation
    void push(int value) {
        if (top >= SIZE - 1) {
            cout << "Stack Overflow\n";
        } else {
            arr[++top] = value;
            cout << value << " pushed to stack.\n";
        }
    }

    // Pop operation
    void pop() {
        if (top < 0) {
            cout << "Stack Underflow\n";
        } else {
            cout << arr[top--] << " popped from stack.\n";
        }
    }

    // Peek operation
    void peek() {
        if (top < 0) {
            cout << "Stack is empty.\n";
        } else {
            cout << "Top element is: " << arr[top] << "\n";
        }
    }

    // Check if stack is empty
    bool isEmpty() {
        return top < 0;
    }

    // Traverse stack
    void display() {
        if (top < 0) {
            cout << "Stack is empty.\n";
        } else {
            cout << "Stack elements:\n";
            for (int i = top; i >= 0; i--) {
                cout << arr[i] << " ";
            }
            cout << "\n";
        }
    }
};

int main() {
    Stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.display();
    s.peek();
    s.pop();
    s.display();
    cout << (s.isEmpty() ? "Stack is empty.\n" : "Stack is not empty.\n");

    return 0;
}
